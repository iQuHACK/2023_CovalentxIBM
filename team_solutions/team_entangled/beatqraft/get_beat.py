import numpy as np
import pennylane as qml
import numpy as np
import covalent as ct
from qiskit import QuantumCircuit, execute, Aer, IBMQ, transpile
import numpy as np
import covalent as ct



hihat = {'10101000': 0.0001, '00010101': 0.0002, '10111000': 0.0002, '11010100': 0.0001, '01010101': 0.0003, '00101110': 0.0001, '00111110': 0.0001, '00100000': 0.0003, '11011010': 0.0005, '10111110': 0.0008, '00111000': 0.0007, '00011001': 0.0001, '11011111': 0.0009, '10110111': 0.0005, '11110101': 0.0002, '11011011': 0.0001, '01001000': 0.0011, '10100110': 0.0002, '10111111': 0.0013, '00011101': 0.0002, '10110010': 0.0007, '00101100': 0.0012, '10001111': 0.0003, '11000001': 0.0009, '00110111': 0.0048, '01111111': 0.001, '00110100': 0.0031, '11101010': 0.0008, '11000000': 0.0016, '10001001': 0.0087, '10111010': 0.0011, '10110011': 0.0019, '00011000': 0.0005, '11111001': 0.0082, '10010000': 0.0019, '01110010': 0.0003, '01110110': 0.0002, '11101110': 0.0011, '01100011': 0.0017, '01010001': 0.0021, '11100011': 0.0052, '01101000': 0.0142, '11111000': 0.0207, '00100011': 0.0067, '01010111': 0.0001, '01110111': 0.0024, '00110110': 0.0029, '01010110': 0.0017, '10001010': 0.0029, '00010111': 0.0031, '00001101': 0.0073, '11010010': 0.0027, '11101001': 0.0024, '11111101': 0.0025, '11111011': 0.0016, '10111011': 0.0012, '11011100': 0.0003, '01110001': 0.0119, '10110101': 0.0021, '10100100': 0.0001, '00100100': 0.0009, '00000000': 0.0021, '10000110': 0.0129, '00110011': 0.0016, '01110011': 0.0003, '11110011': 0.0013, '11110001': 0.0006, '11000011': 0.0036, '10000101': 0.0035, '01000101': 0.0009, '00001110': 0.0015, '01000100': 0.0016, '00001100': 0.001, '11111111': 0.0024, '11001000': 0.0015, '01000000': 0.0074, '11010001': 0.0022, '01111000': 0.0043, '00101001': 0.0047, '11100000': 0.0048, '11100001': 0.004, '11000010': 0.0036, '11100111': 0.002, '01011101': 0.0021, '00100010': 0.0043, '10110000': 0.0019, '01111110': 0.0057, '11000101': 0.0029, '01000010': 0.0032, '11110110': 0.0018, '11101101': 0.0086, '10110001': 0.0028, '10011101': 0.0079, '01000110': 0.0044, '00001010': 0.0016, '00111010': 0.0029, '00010100': 0.0038, '01011110': 0.0027, '00000110': 0.0019, '11010110': 0.0016, '01001010': 0.0056, '00110010': 0.0005, '11011110': 0.0058, '00111100': 0.0016, '01110000': 0.0071, '10101100': 0.0005, '00100110': 0.0066, '01011100': 0.0034, '01101100': 0.0058, '01001101': 0.0025, '10011100': 0.0016, '10001011': 0.0009, '01001001': 0.0013, '01010100': 0.0014, '11001010': 0.0031, '11001101': 0.0027, '10011110': 0.0093, '01100110': 0.0047, '00000010': 0.0089, '11010011': 0.0036, '11001011': 0.0014, '10011011': 0.0038, '00001000': 0.0007, '10010100': 0.0047, '10001110': 0.0036, '01011000': 0.0014, '00110101': 0.0026, '10100101': 0.0034, '00111111': 0.005, '01001110': 0.0009, '01011001': 0.0042, '10010011': 0.0152, '11101111': 0.0069, '11100101': 0.0084, '00000101': 0.0195, '10110110': 0.0012, '00010000': 0.0083, '00111101': 0.0064, '11001111': 0.0019, '01100000': 0.0169, '11101100': 0.0132, '00010010': 0.0039, '11100100': 0.0059, '10010101': 0.0042, '11001100': 0.0164, '11101000': 0.0075, '11110111': 0.002, '11111110': 0.0029, '10000001': 0.0135, '10100010': 0.0015, '01010010': 0.0015, '00001111': 0.0091, '01101001': 0.0075, '00110000': 0.0011, '01011010': 0.0015, '10000111': 0.0047, '01101101': 0.0015, '11000110': 0.0031, '00100101': 0.0009, '01001100': 0.0017, '00101000': 0.0007, '10011111': 0.0058, '10011001': 0.0027, '00011110': 0.0105, '11111010': 0.0069, '11100010': 0.0089, '01111011': 0.0022, '01000001': 0.0024, '11010101': 0.0011, '01100100': 0.0108, '11011101': 0.0004, '00100111': 0.0111, '10101111': 0.0074, '11011001': 0.0008, '01111001': 0.0023, '10001000': 0.0025, '01111101': 0.0127, '00000100': 0.0037, '00100001': 0.0008, '10101011': 0.0004, '01100001': 0.0032, '00000011': 0.0194, '00011010': 0.0002, '00001001': 0.0079, '00001011': 0.0029, '01010011': 0.0005, '01011111': 0.0017, '00010110': 0.0052, '01100111': 0.0025, '11001001': 0.0021, '00111011': 0.0021, '10101101': 0.0079, '11100110': 0.0156, '10000100': 0.0118, '11110100': 0.0038, '10111101': 0.0075, '01101110': 0.0076, '01110101': 0.0008, '01100101': 0.0004, '00110001': 0.0033, '10000010': 0.0062, '10011010': 0.007, '00000111': 0.0126, '01110100': 0.0008, '01101111': 0.0003, '11000100': 0.0093, '00010001': 0.0143, '10001101': 0.0116, '01000011': 0.0017, '11110010': 0.002, '10101010': 0.0003, '11010000': 0.0004, '11010111': 0.0064, '10010111': 0.0075, '10010010': 0.0043, '10000000': 0.0023, '11110000': 0.0067, '01111100': 0.0014, '11000111': 0.0006, '01010000': 0.0023, '11101011': 0.0074, '00010011': 0.0002, '11111100': 0.0269, '01001011': 0.0028, '10000011': 0.0056, '00101011': 0.0001, '10100001': 0.0076, '00111001': 0.0116, '11001110': 0.0086, '10010110': 0.0097, '00011100': 0.0059, '10101001': 0.0018, '01101011': 0.0013, '00101111': 0.0052, '11011000': 0.0006, '10001100': 0.0075, '00101101': 0.0112, '00011111': 0.0102, '10010001': 0.0095}
bass = {'10101001': 0.0003, '11000100': 0.0004, '10000000': 0.0002, '00110000': 0.0012, '01100000': 0.0004, '11100100': 0.0001, '00111001': 0.001, '00001011': 0.0001, '10000001': 0.0003, '01111100': 0.0003, '00101101': 0.002, '10010101': 0.0018, '10111101': 0.0001, '01101110': 0.0006, '01100010': 0.0012, '00010101': 0.0026, '11001100': 0.0002, '11000011': 0.0004, '00011001': 0.0006, '00011101': 0.0009, '01111010': 0.0012, '11001110': 0.0014, '00000111': 0.0024, '01000000': 0.0026, '01100011': 0.0023, '10011111': 0.001, '11000110': 0.0033, '01100110': 0.0002, '10011110': 0.0005, '00111010': 0.0004, '00010100': 0.0133, '01011110': 0.0004, '00110101': 0.0035, '01011000': 0.0032, '10100101': 0.0046, '00111111': 0.0002, '11001010': 0.0131, '11001101': 0.0011, '11001000': 0.0015, '11111111': 0.0007, '01010101': 0.0025, '00110100': 0.0021, '11000001': 0.0009, '01110000': 0.0005, '01000010': 0.0023, '00010000': 0.0052, '00111101': 0.0023, '01111101': 0.0013, '01010100': 0.0008, '01001001': 0.0043, '01011100': 0.0047, '01101010': 0.0068, '00000010': 0.0006, '11101110': 0.0022, '01110011': 0.0017, '11110011': 0.0012, '11110001': 0.0016, '00111110': 0.0019, '00001001': 0.0021, '00011010': 0.0018, '01010000': 0.0041, '11000111': 0.0041, '10101111': 0.0038, '00000101': 0.0043, '10110110': 0.0023, '10100001': 0.0053, '00101011': 0.0048, '11110000': 0.0009, '11001011': 0.001, '10011011': 0.0028, '11011111': 0.002, '10101000': 0.0001, '01000001': 0.0007, '01111011': 0.0019, '01101100': 0.0019, '00101111': 0.0002, '01101011': 0.0081, '11000000': 0.0007, '11110110': 0.0087, '00110111': 0.0014, '01111111': 0.0007, '11100000': 0.0022, '10110011': 0.0021, '01110101': 0.0019, '10111001': 0.0028, '00000000': 0.0036, '10000110': 0.0057, '00110011': 0.0039, '00001110': 0.0048, '01000101': 0.0037, '10100100': 0.0007, '00100100': 0.0027, '01111110': 0.001, '11000101': 0.0036, '01111000': 0.0029, '11010001': 0.0007, '11000010': 0.001, '10011000': 0.0007, '00011011': 0.0062, '10101110': 0.0015, '11111101': 0.0005, '11101001': 0.0028, '11111010': 0.0064, '11100010': 0.0058, '01010001': 0.0081, '01000100': 0.0143, '00001100': 0.0037, '11110111': 0.0003, '01100100': 0.0027, '11101000': 0.0004, '00011000': 0.0113, '11111001': 0.0021, '10010000': 0.0004, '01110010': 0.0005, '11001111': 0.0004, '10100000': 0.0024, '00100001': 0.0018, '00100111': 0.0138, '11011101': 0.0079, '11111011': 0.0057, '10111011': 0.0052, '01110001': 0.0004, '11011100': 0.0009, '10110101': 0.0048, '10001110': 0.0024, '01000110': 0.01, '10100011': 0.002, '10100111': 0.0019, '10001011': 0.0075, '11110101': 0.0027, '11011011': 0.0059, '11100101': 0.0185, '01001110': 0.0104, '01011001': 0.0103, '10010011': 0.0003, '11101111': 0.0017, '01101101': 0.0009, '00001000': 0.0032, '10010100': 0.0063, '10010001': 0.005, '11101011': 0.0111, '10110000': 0.0043, '01011101': 0.0065, '00001101': 0.0011, '00010111': 0.0037, '00100010': 0.0056, '10110111': 0.0156, '11100110': 0.0094, '10000100': 0.015, '10111111': 0.0004, '10100110': 0.0025, '01110111': 0.0006, '01010111': 0.0078, '10010110': 0.0026, '10011100': 0.0033, '01001101': 0.0023, '11101100': 0.0017, '01000111': 0.0007, '01001000': 0.0004, '10001001': 0.0004, '10111010': 0.0116, '10001000': 0.0024, '01111001': 0.01, '11011001': 0.0032, '01100111': 0.0041, '10110100': 0.0044, '10011001': 0.0008, '00101001': 0.0004, '01001111': 0.0038, '00011111': 0.0015, '01010110': 0.0068, '10110010': 0.004, '11100001': 0.0033, '00110001': 0.0006, '01100101': 0.009, '10000010': 0.0039, '10011010': 0.0021, '10101100': 0.0068, '00010001': 0.0039, '11110100': 0.0141, '01010010': 0.0006, '00001111': 0.0014, '10100010': 0.016, '10000011': 0.0059, '01001011': 0.0104, '01101111': 0.0006, '01110100': 0.0017, '00010011': 0.0063, '01100001': 0.0007, '10101011': 0.0074, '11011000': 0.0014, '00011100': 0.0074, '00011110': 0.0019, '00101010': 0.0119, '10000101': 0.0095, '00111100': 0.0007, '00110010': 0.0009, '11011110': 0.0012, '00100011': 0.0083, '01101000': 0.0011, '11111000': 0.001, '11100011': 0.0099, '11111100': 0.0075, '00010110': 0.005, '01011111': 0.0053, '11010100': 0.003, '11110010': 0.0112, '11111110': 0.0007, '00000001': 0.0034, '01011011': 0.0224, '10001101': 0.0029, '01000011': 0.001, '01110110': 0.0043, '11010101': 0.0035, '01001010': 0.0185, '11010110': 0.007, '00101100': 0.0152, '01001100': 0.0005, '00100101': 0.0052, '00000011': 0.009, '11010010': 0.0049, '10010111': 0.0072, '10010010': 0.0019, '10000111': 0.0025, '01011010': 0.0135, '00010010': 0.0152, '11010011': 0.0027, '10001010': 0.0059, '10001111': 0.0025, '00110110': 0.0054, '11101101': 0.0033, '10110001': 0.0083, '10011101': 0.0011, '00111000': 0.0008, '10111000': 0.0102, '00000110': 0.0015, '00101110': 0.0085, '11001001': 0.001, '00111011': 0.0052, '10101101': 0.003, '11101010': 0.0109, '01010011': 0.0187, '10001100': 0.0008, '11011010': 0.0111, '11010111': 0.0001, '10101010': 0.0009, '11010000': 0.0033, '11100111': 0.0046}
snare =  {'11110000': 0.0002, '01000011': 0.0001, '01110000': 0.0002, '10000000': 0.0002, '00000000': 0.0001, '10011011': 0.0006, '10101111': 0.0006, '11000101': 0.0009, '10001111': 0.0006, '01110110': 0.0005, '10110111': 0.0011, '01000000': 0.0006, '11000110': 0.0002, '11000001': 0.0008, '11101100': 0.0002, '01000111': 0.0004, '10011101': 0.0018, '11001001': 0.0004, '10001110': 0.0011, '00110000': 0.0002, '11110010': 0.0023, '10010111': 0.0002, '10110011': 0.0017, '00000011': 0.0001, '00011111': 0.001, '10011010': 0.0007, '10100010': 0.0008, '10110010': 0.0007, '00010010': 0.0013, '01100100': 0.0018, '01010001': 0.0018, '00001000': 0.0043, '11101001': 0.0014, '00000101': 0.0044, '10110110': 0.0004, '00101011': 0.0009, '10100001': 0.0018, '01010011': 0.0014, '10011100': 0.0045, '01001101': 0.0012, '11100110': 0.0001, '10000100': 0.0009, '11110011': 0.0055, '01110011': 0.0028, '11110001': 0.0012, '01100011': 0.0011, '00110110': 0.0015, '01010110': 0.0009, '11101000': 0.0025, '00110100': 0.008, '01100010': 0.0009, '01110001': 0.0004, '10110101': 0.0043, '11011100': 0.0009, '01010000': 0.001, '11000111': 0.0048, '10000101': 0.0035, '01011000': 0.011, '10100101': 0.0006, '00110101': 0.0039, '00111010': 0.0012, '01011110': 0.0011, '00010100': 0.0084, '01101100': 0.0038, '00101101': 0.0042, '01100101': 0.0072, '10000010': 0.003, '00110001': 0.0006, '11001110': 0.001, '11010000': 0.003, '10101010': 0.0023, '01101010': 0.006, '01011100': 0.0016, '00100110': 0.004, '00100001': 0.0067, '10100000': 0.001, '01001100': 0.0023, '00100101': 0.0008, '11000011': 0.0011, '01000100': 0.0031, '00001100': 0.001, '11111111': 0.0108, '11001000': 0.0036, '01000101': 0.0111, '00001110': 0.002, '10000111': 0.0021, '01011010': 0.0047, '01010101': 0.0062, '00111110': 0.0117, '11110101': 0.0022, '11011011': 0.0044, '00111011': 0.0028, '00101110': 0.0025, '00111100': 0.0037, '00110010': 0.0024, '11011110': 0.0022, '10111001': 0.0005, '01110101': 0.0051, '10100011': 0.0008, '10100111': 0.0061, '10001011': 0.0019, '10101101': 0.002, '00111111': 0.003, '10000001': 0.0026, '00001111': 0.0044, '00100000': 0.0034, '00010111': 0.0032, '00001101': 0.0014, '00101000': 0.0006, '10011111': 0.0042, '10010001': 0.002, '11110100': 0.006, '11100001': 0.0072, '10100110': 0.0008, '10111111': 0.002, '10010010': 0.006, '11101110': 0.0008, '00000010': 0.0058, '11100100': 0.0061, '10001101': 0.006, '01001000': 0.003, '10001001': 0.0013, '10111010': 0.0045, '11100010': 0.0023, '00101100': 0.0071, '01000110': 0.0019, '00001010': 0.0023, '10101000': 0.0024, '01011111': 0.0158, '00010110': 0.0105, '11111001': 0.0001, '10010000': 0.0009, '00011000': 0.0123, '00101010': 0.0002, '00011110': 0.0085, '10011001': 0.0061, '01100111': 0.013, '10110100': 0.0099, '00101001': 0.0012, '01001111': 0.0074, '11011010': 0.0009, '00100011': 0.0008, '11100011': 0.0071, '11111000': 0.0388, '01101000': 0.0018, '00011001': 0.0017, '01101011': 0.0002, '00101111': 0.0041, '10101001': 0.0002, '11100000': 0.003, '10111101': 0.0062, '01101110': 0.002, '00001001': 0.0019, '00011010': 0.0097, '01101001': 0.0062, '11110111': 0.0009, '00000001': 0.0035, '11111110': 0.0007, '11110110': 0.001, '11111011': 0.0098, '10111011': 0.0007, '10111110': 0.0095, '11011000': 0.0094, '11111010': 0.0059, '10111100': 0.0213, '11010010': 0.0019, '10100100': 0.0014, '00100100': 0.0043, '01011011': 0.0037, '11010100': 0.0015, '11111101': 0.0022, '00100111': 0.0022, '11011101': 0.001, '10101100': 0.0043, '11100101': 0.0029, '01011001': 0.0138, '01001110': 0.001, '11101111': 0.0048, '10010011': 0.004, '01101101': 0.0112, '00000111': 0.0007, '10110000': 0.0005, '00100010': 0.0002, '01011101': 0.0043, '01010100': 0.0016, '01001001': 0.0094, '01100001': 0.0129, '10101011': 0.0017, '00010011': 0.0058, '01101111': 0.0134, '01110100': 0.0017, '10000011': 0.0051, '01001011': 0.0048, '00111001': 0.0002, '00010101': 0.0014, '01111111': 0.0056, '00110111': 0.0034, '10000110': 0.0031, '00110011': 0.0035, '00111000': 0.0027, '10111000': 0.004, '10011110': 0.0123, '01100110': 0.0047, '11001010': 0.0004, '11001101': 0.0022, '00011011': 0.0017, '11000010': 0.0019, '10011000': 0.0296, '11010011': 0.0023, '11010110': 0.0004, '01001010': 0.0009, '00000110': 0.0043, '10101110': 0.0095, '01000001': 0.003, '11010101': 0.0022, '11111100': 0.0108, '10001000': 0.0029, '11011001': 0.0038, '01111101': 0.0244, '00000100': 0.0027, '01111001': 0.0099, '11100111': 0.0097, '01100000': 0.0068, '11001111': 0.005, '01110111': 0.0029, '01010111': 0.0005, '10010110': 0.0035, '11001100': 0.0004, '10010101': 0.0023, '00001011': 0.0051, '11000100': 0.005, '11000000': 0.002, '01110010': 0.0041, '11010001': 0.0001, '01111000': 0.0061, '00011100': 0.0085, '01111100': 0.0069, '11101011': 0.0068, '10001010': 0.0108, '11001011': 0.0064, '11011111': 0.0096, '00010000': 0.0004, '00111101': 0.0046, '01111010': 0.0079, '11101101': 0.0171, '10110001': 0.0017, '11010111': 0.0014, '10001100': 0.0028, '01000010': 0.0011, '10010100': 0.0094}

"""
def get_from_oslo():
	import pennylane as qml
	dev = qml.device("default.qubit", wires=1)

	@qml.qnode(dev)
	def circuit(params):
	    qml.RX(params[0], wires=0)
	    qml.RY(params[1], wires=0)
	    qml.RZ(params[2], wires=0)
	    return qml.expval(qml.PauliZ(0))

	@ct.electron
	def tester(params):
	    return circuit(params)

	@ct.electron
	def test_wrapper():
	    params = np.random.rand(3)
	    res = tester(params)
	    print(res)
	    return res

	@ct.lattice
	def generator():
	    result = []
	    for i in range(3):
	        res = test_wrapper()
	        result.append(res)
	    return result

	dispatch_id = ct.dispatch(generator)()
	result = ct.get_result(dispatch_id=dispatch_id,wait=True)#,results_dir="./")
	return(result)
"""

def get_from_oslo():

	def gen_circuit():	
		circ = QuantumCircuit(1,1)
		circ.rx(np.random.rand(), 0)
		circ.ry(np.random.rand(), 0)
		circ.rz(np.random.rand(), 0)
		circ.measure(0,0)
		return circ

	@ct.electron
	def run_circuit():
		circ = gen_circuit()
		provider = IBMQ.load_account()
		backend = provider.get_backend('ibm_oslo')
		job = execute(circ, backend, shots = 100)
		counts = job.result().get_counts()
		return counts['1']/100

	@ct.lattice
	def generator():
		result = []
		for i in range(3):
			res = run_circuit()
			result.append(res)
		return result

	dispatch_id = ct.dispatch(generator)()
	result = ct.get_result(dispatch_id=dispatch_id,wait=True)#,results_dir="./")
	return(result)

def sample_from_dist(dist, randfloat):
	val_traversed = 0

	for elem in dist.keys():
		if (val_traversed > randfloat):
			return elem

		val_traversed += dist[elem]


def get_beat_strings():
	# rfs = get_from_oslo()
	rfs = np.random.rand(3)
	hihat_beat = sample_from_dist(hihat, rfs[0])
	snare_beat = sample_from_dist(snare, rfs[1])
	bass_beat = sample_from_dist(bass, rfs[2])
	return hihat_beat, snare_beat, bass_beat



